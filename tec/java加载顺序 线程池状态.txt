类加载的顺序：
父类静态变量  静态语句块
子类的静态变量 静态语句块
父类的普通变量以及语句块
父类的构造方法
子类的普通变量和普通方法
子类的构造器
--------------------------------------------------
线程池的五种状态：
running   运行中 可以添加线程，也可以处理线程
shutdown   不接收新任务，但可以处理已添加的任务 running-shutdow()-shutdow
stop   不接收 中断正在处理的 running-shutdownow()-top
tidying    所有任务已终止，shutdow状态下线程池为空时  或者stop状态下线程池为空变为tidying
terminated 线程池处于tidying状态，执行完terminated()方法后 变为tidying
--------------------------------------------------
线程5种状态
创建(New) 就绪(Runnable) 运行状态(Running) 阻塞状态(Blocked) 死亡状态(Dead)
new调用start()进入就绪状态(Runnable)
就绪状态(Runnable)  获取cpu进入到  运行状态(Running)
运行状态(Running)通过sleep()、join()进入阻塞状态，sleep结束或者join结束进入到运行状态(Running)
运行状态(Running)wait阻塞等待   通过notify()和notifyAll()，interrupt() 进入阻塞状态的锁定
运行状态(Running)也可以通过synchronized进入状态锁定。
运行状态(Running)run结束  结束  异常退出进入dead状态
--------------------------------------------------
反射机制：
java类的编译成字节码的时候，通过JDK工具反射方式访问类字节码的字段，方法。常用spring ioc容器。

反射机制常用的类：
Java.lang.Class;

Java.lang.reflect.Constructor;

Java.lang.reflect.Field;

Java.lang.reflect.Method;

Java.lang.reflect.Modifier;
https://blog.csdn.net/a745233700/article/details/82893076
--------------------------------------------------
序列化
缺点
改进
对象转二进制传输
缺点不能跨平台
使用spring的jakson序列化
可以跨平台

--------------------------------------------------
mybatis执行器三种？

SimpleExecutor：每执行一次update或select，就开启一个Statement对象，用完立刻关闭Statement对象。

ReuseExecutor：执行update或select，以sql作为key查找Statement对象，存在就使用，不存在就创建，用完后，
不关闭Statement对象，而是放置于Map内，供下一次使用。简言之，就是重复使用Statement对象。

BatchExecutor：执行update（没有select，JDBC批处理不支持select），将所有sql都添加到批处理中（addBatch()），
等待统一执行（executeBatch()），它缓存了多个Statement对象，每个Statement对象都是addBatch()完毕后，
等待逐一执行executeBatch()批处理。与JDBC批处理相同。

作用范围：Executor的这些特点，都严格限制在SqlSession生命周期范围内。

Mybatis中如何指定使用哪一种Executor执行器？

答：在Mybatis配置文件中，可以指定默认的ExecutorType执行器类型，也可以手动给DefaultSqlSessionFactory的
创建SqlSession的方法传递ExecutorType类型参数。

--------------------------------------------------
spring cloud组件
euraka
zuul
ribbon
hystrix
config
jwt
auth2.0
zipkin
--------------------------------------------------
java如何保证多线程运行安全
lock 和 synchronized
